trigger:
- none

variables:
  webAppName: 'servicedesk-webapp-uat'
  vmImageName: 'ubuntu-latest'
  appType: 'webAppLinux'
  runtimeStack: 'PYTHON|3.8'
  environmentName: 'servicedesk-webapp-uat'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.8.5'
  serviceConnection: 'PythonAppUAT' # Service Connection Name as created in the Azure DevOps source

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python Version $(pythonVersion)'
      inputs:
        versionSpec: $(pythonVersion)
    
    - task: ArchiveFiles@2
      displayName: 'Archive Files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload Package'
      artifact: webapp
      
- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: $(serviceConnection)
              appType: $(appType)
              webAppName: $(webAppName)
              RuntimeStack: $(runtimeStack)
              package: $(Pipeline.Workspace)/webapp/$(Build.BuildID).zip
              ScriptType: 'Inline Script'
              InlineScript: |
                cd /home/site/wwwroot/
                sudo apt-get install python3-venv
                python3.8 -m venv tmpenv
                source /tempenv/bin/activate
                python3.8 -m pip install setuptools
                python3.8 -m pip install -r requirements.txt
                python3.8 /home/site/wwwroot/manage.py makemigrations
                python3.8 /home/site/wwwroot/manage.py migrate
              # Add git clone -> make migrations > git push deployed branch > to commit the makemigration files.
              # This manner of deployment should be true for production and development


    
          